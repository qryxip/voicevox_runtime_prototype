name: Build and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - Cargo.*
      - crates/voicevox_runtime/**
      - .github/workflows/build-and-deploy.yml
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      version:
        required: true

defaults:
  run:
    shell: bash

env:
  VERSION: ${{ github.event.release.tag_name || github.event.inputs.version || '0.0.0' }}

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - { artifact-name: windows-x64-cpu, channel: stable, target-triple: x86_64-pc-windows-msvc, os: windows-2019 }
          - { artifact-name: windows-x64-directml, channel: stable, target-triple: x86_64-pc-windows-msvc, os: windows-2019 }
          - { artifact-name: windows-x64-cuda, channel: stable, target-triple: x86_64-pc-windows-msvc, os: windows-2019 }
          - { artifact-name: windows-x86-cpu, channel: stable, target-triple: i686-pc-windows-msvc, os: windows-2019 }
          - { artifact-name: linux-x64-cpu, channel: stable, target-triple: x86_64-unknown-linux-gnu, os: ubuntu-20.04 }
          - { artifact-name: linux-x64-gpu, channel: stable, target-triple: x86_64-unknown-linux-gnu, os: ubuntu-20.04 }
          - { artifact-name: linux-arm64-cpu, channel: stable, target-triple: aarch64-unknown-linux-gnu, os: ubuntu-20.04 }
          - { artifact-name: android-arm64-cpu, channel: stable, target-triple: aarch64-linux-android, os: ubuntu-20.04 }
          - { artifact-name: android-x86_64-cpu, channel: stable, target-triple: x86_64-linux-android, os: ubuntu-20.04 }
          - { artifact-name: osx-arm64-cpu, channel: stable, target-triple: aarch64-apple-darwin, os: macos-11 }
          - { artifact-name: osx-x64-cpu, channel: stable, target-triple: x86_64-apple-darwin, os: macos-11 }
          - { artifact-name: ios-arm64-cpu, channel: stable, target-triple: aarch64-apple-ios, os: macos-12 }
          - { artifact-name: ios-arm64-cpu-sim, channel: stable, target-triple: aarch64-apple-ios-sim, os: macos-12 }
          - { artifact-name: ios-x64-cpu, channel: stable, target-triple: x86_64-apple-ios, os: macos-12 }

    name: Build (${{ matrix.channel }}-${{ matrix.target-triple }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.channel }}
          targets: ${{ matrix.target-triple }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}

      - name: Install cargo-binstall
        uses: taiki-e/install-action@cargo-binstall

      - name: Install cargo-edit
        run: cargo binstall cargo-edit@^0.12 --no-confirm --log-level debug

      - name: Set version
        run: cargo set-version "$VERSION" -p voicevox_runtime

      - name: cargo-build
        run: cargo build --release --target ${{ matrix.target-triple }} -p voicevox_runtime

      - name: Determine the asset name
        id: asset-name
        run: |

          echo 'asset-name=voicevox_runtime-${{ matrix.artifact-name }}-${{ env.VERSION }}' >> "$GITHUB_OUTPUT"

      - name: Upload artifact
        run: |
          case "$RUNNER_OS" in
            Windows)
              prefix=
              ext=dll;;
            macOS)
              prefix=lib
              ext=dylib;;
            Linux)
              prefix=lib
              ext=so;;
          esac

          artifact=artifact/${{ steps.asset-name.outputs.assert-name }}
          cp -v target/${{ matrix.target-triple }}/release/*voicevox_runtime.{dll,so,dylib} "$artifact"
